version: '3'

services:
  nginx:
    build: ./nginx
    ports:
      - "1339:80"
    volumes:
      - static_volume:/home/app/microservice/static
    depends_on:
      - web
    restart: "on-failure"

  db:
    image: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: "on-failure"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    gunicorn lifelogger.wsgi:application --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - .:/microservice
      - static_volume:/home/app/microservice/static
    ports:
      - "8001:8001"
    depends_on:
      - db
    env_file:
      - .env
    image: microservice_app
    expose:
      - ${APP_PORT}
    restart: "on-failure"

  rabbitmq:
    image:
      rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  rabbitmq:
  rabbitmq_logs:
